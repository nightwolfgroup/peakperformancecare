# Generated by Django 3.1.3 on 2020-11-18 22:44

from django.db import migrations, models
import django.db.models.deletion
import modelcluster.fields
import wagtail.core.blocks
import wagtail.core.fields
import wagtail.images.blocks
import wagtail_color_panel.blocks
import wagtail_color_panel.fields
import wagtailmetadata.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('wagtailcore', '0059_apply_collection_ordering'),
        ('wagtailimages', '0022_uploadedimage'),
    ]

    operations = [
        migrations.CreateModel(
            name='FAQPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('search_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Search image')),
            ],
            options={
                'verbose_name': 'FAQ Page',
            },
            bases=(wagtailmetadata.models.MetadataMixin, 'wagtailcore.page', models.Model),
        ),
        migrations.CreateModel(
            name='VideosPasswordPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('hero', wagtail.core.fields.StreamField([('title', wagtail.core.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(help_text='Optional image to display as the background title', required=False)), ('image_overlay_color', wagtail_color_panel.blocks.NativeColorBlock(default='#100f0a', required=True)), ('overlay_opacity', wagtail.core.blocks.ChoiceBlock(choices=[('0', '0%'), ('.1', '10%'), ('.2', '20%'), ('.3', '30%'), ('.4', '40%'), ('.5', '50%'), ('.6', '60%'), ('.7', '70%'), ('.8', '80%'), ('.9', '90%'), ('1', '100%')], help_text='The larger the number, the more intense the image overlay will become.', label='Image Overlay Opacity (%)')), ('title', wagtail.core.blocks.CharBlock(help_text='Main title of the page', max_length=255, required=True)), ('subtitle', wagtail.core.blocks.CharBlock(help_text='Optional text to display below the title', max_length=255, required=False))]))])),
                ('content', wagtail.core.fields.StreamField([('videos', wagtail.core.blocks.StructBlock([('video_groups', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock([('group_title', wagtail.core.blocks.CharBlock(label='Category Title', max_length=25, required=True)), ('group_videos', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock([('thumbnail', wagtail.images.blocks.ImageChooserBlock(label='Video Thumbnail', required=True)), ('heading', wagtail.core.blocks.CharBlock(label='Video Title', max_length=50, required=True)), ('form_title', wagtail.core.blocks.CharBlock(max_length=255, required=True)), ('form', wagtail.core.blocks.RawHTMLBlock(help_text='Place the entire Infusionsoft embed code snippet here.', label='Infusionsoft Form', required=True))], icon='fa-youtube-play'), help_text='Videos that belong to this category.', label='Videos'))], icon='fa-object-group'), help_text='Each video group will add a button at the top of the gallery to filter by the videos in the group', label='Video Categories'))])), ('cta', wagtail.core.blocks.StructBlock([('heading', wagtail.core.blocks.CharBlock(default='Want To Get Relief Faster?', help_text='Heading text to display to the right of the CTA links.', max_length=100, required=True)), ('subtext', wagtail.core.blocks.CharBlock(default='Choose an option that works best for you.', help_text='Optional text to display below the heading.', max_length=500, required=False)), ('links', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock([('icon', wagtail.images.blocks.ImageChooserBlock(help_text='Icon to display inside of a circle to act as a link.', required=True)), ('link', wagtail.core.blocks.StructBlock([('link_text', wagtail.core.blocks.CharBlock(label='Button/Link Text', max_length=50)), ('internal_page', wagtail.core.blocks.PageChooserBlock(help_text='Point the link to an internal page.', label='Internal Page Link', required=False)), ('external_link', wagtail.core.blocks.URLBlock(help_text='Point the link to an external page.', label='External Page Link', required=False)), ('new_tab', wagtail.core.blocks.BooleanBlock(help_text='Check if you would like the link to open in a new tab when clicked.', label='Open Link In New Tab?', required=False))], required=True))], icon='fa-link'), label='CTA Link')), ('background_image', wagtail.images.blocks.ImageChooserBlock(required=False))]))])),
                ('search_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Search image')),
            ],
            options={
                'verbose_name': 'Password Video List Page',
            },
            bases=(wagtailmetadata.models.MetadataMixin, 'wagtailcore.page', models.Model),
        ),
        migrations.CreateModel(
            name='VideoPasswordPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('hero', wagtail.core.fields.StreamField([('title', wagtail.core.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(help_text='Optional image to display as the background title', required=False)), ('image_overlay_color', wagtail_color_panel.blocks.NativeColorBlock(default='#100f0a', required=True)), ('overlay_opacity', wagtail.core.blocks.ChoiceBlock(choices=[('0', '0%'), ('.1', '10%'), ('.2', '20%'), ('.3', '30%'), ('.4', '40%'), ('.5', '50%'), ('.6', '60%'), ('.7', '70%'), ('.8', '80%'), ('.9', '90%'), ('1', '100%')], help_text='The larger the number, the more intense the image overlay will become.', label='Image Overlay Opacity (%)')), ('title', wagtail.core.blocks.CharBlock(help_text='Main title of the page', max_length=255, required=True)), ('subtitle', wagtail.core.blocks.CharBlock(help_text='Optional text to display below the title', max_length=255, required=False))]))])),
                ('content', wagtail.core.fields.StreamField([('video', wagtail.core.blocks.StructBlock([('video_groups', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock([('group_title', wagtail.core.blocks.CharBlock(label='Category Title', max_length=25, required=True)), ('group_videos', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock([('thumbnail', wagtail.images.blocks.ImageChooserBlock(label='Video Thumbnail', required=True)), ('heading', wagtail.core.blocks.CharBlock(label='Video Title', max_length=50, required=True)), ('form_title', wagtail.core.blocks.CharBlock(max_length=255, required=True)), ('form', wagtail.core.blocks.RawHTMLBlock(help_text='Place the entire Infusionsoft embed code snippet here.', label='Infusionsoft Form', required=True))], icon='fa-youtube-play'), help_text='Videos that belong to this category.', label='Videos'))], icon='fa-object-group'), help_text='Each video group will add a button at the top of the gallery to filter by the videos in the group', label='Video Categories'))])), ('cta', wagtail.core.blocks.StructBlock([('heading', wagtail.core.blocks.CharBlock(default='Want To Get Relief Faster?', help_text='Heading text to display to the right of the CTA links.', max_length=100, required=True)), ('subtext', wagtail.core.blocks.CharBlock(default='Choose an option that works best for you.', help_text='Optional text to display below the heading.', max_length=500, required=False)), ('links', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock([('icon', wagtail.images.blocks.ImageChooserBlock(help_text='Icon to display inside of a circle to act as a link.', required=True)), ('link', wagtail.core.blocks.StructBlock([('link_text', wagtail.core.blocks.CharBlock(label='Button/Link Text', max_length=50)), ('internal_page', wagtail.core.blocks.PageChooserBlock(help_text='Point the link to an internal page.', label='Internal Page Link', required=False)), ('external_link', wagtail.core.blocks.URLBlock(help_text='Point the link to an external page.', label='External Page Link', required=False)), ('new_tab', wagtail.core.blocks.BooleanBlock(help_text='Check if you would like the link to open in a new tab when clicked.', label='Open Link In New Tab?', required=False))], required=True))], icon='fa-link'), label='CTA Link')), ('background_image', wagtail.images.blocks.ImageChooserBlock(required=False))]))])),
                ('search_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Search image')),
            ],
            options={
                'verbose_name': 'Password Protected Video',
            },
            bases=(wagtailmetadata.models.MetadataMixin, 'wagtailcore.page', models.Model),
        ),
        migrations.CreateModel(
            name='RelatedArticle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('page', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='related_articles', to='education.faqpage')),
                ('related_article', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailcore.page')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FAQ',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('question', models.CharField(max_length=500)),
                ('answer', models.TextField()),
                ('page', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='FAQs', to='education.faqpage')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EducationPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('overlay_color', wagtail_color_panel.fields.ColorField(default='#000000', max_length=7, verbose_name='Overlay Color')),
                ('overlay_opacity', models.CharField(choices=[('0', '0%'), ('.1', '10%'), ('.2', '20%'), ('.3', '30%'), ('.4', '40%'), ('.5', '50%'), ('.6', '60%'), ('.7', '70%'), ('.8', '80%'), ('.9', '90%'), ('1', '100%')], default='.7', max_length=4, verbose_name='Overlay Opacity')),
                ('content', wagtail.core.fields.StreamField([('videos', wagtail.core.blocks.StructBlock([('video_groups', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock([('group_title', wagtail.core.blocks.CharBlock(label='Category Title', max_length=25, required=True)), ('group_videos', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock([('thumbnail', wagtail.images.blocks.ImageChooserBlock(label='Video Thumbnail', required=True)), ('heading', wagtail.core.blocks.CharBlock(label='Video Title', max_length=50, required=True)), ('form_title', wagtail.core.blocks.CharBlock(max_length=255, required=True)), ('form', wagtail.core.blocks.RawHTMLBlock(help_text='Place the entire Infusionsoft embed code snippet here.', label='Infusionsoft Form', required=True))], icon='fa-youtube-play'), help_text='Videos that belong to this category.', label='Videos'))], icon='fa-object-group'), help_text='Each video group will add a button at the top of the gallery to filter by the videos in the group', label='Video Categories'))])), ('cta', wagtail.core.blocks.StructBlock([('heading', wagtail.core.blocks.CharBlock(default='Want To Get Relief Faster?', help_text='Heading text to display to the right of the CTA links.', max_length=100, required=True)), ('subtext', wagtail.core.blocks.CharBlock(default='Choose an option that works best for you.', help_text='Optional text to display below the heading.', max_length=500, required=False)), ('links', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock([('icon', wagtail.images.blocks.ImageChooserBlock(help_text='Icon to display inside of a circle to act as a link.', required=True)), ('link', wagtail.core.blocks.StructBlock([('link_text', wagtail.core.blocks.CharBlock(label='Button/Link Text', max_length=50)), ('internal_page', wagtail.core.blocks.PageChooserBlock(help_text='Point the link to an internal page.', label='Internal Page Link', required=False)), ('external_link', wagtail.core.blocks.URLBlock(help_text='Point the link to an external page.', label='External Page Link', required=False)), ('new_tab', wagtail.core.blocks.BooleanBlock(help_text='Check if you would like the link to open in a new tab when clicked.', label='Open Link In New Tab?', required=False))], required=True))], icon='fa-link'), label='CTA Link')), ('background_image', wagtail.images.blocks.ImageChooserBlock(required=False))])), ('podcast', wagtail.core.blocks.StructBlock([]))])),
                ('search_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Search image')),
                ('title_image', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='wagtailimages.image', verbose_name='Image')),
            ],
            options={
                'verbose_name': 'Education Page',
            },
            bases=(wagtailmetadata.models.MetadataMixin, 'wagtailcore.page', models.Model),
        ),
        migrations.CreateModel(
            name='Education',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('repeat_in_subnav', models.BooleanField(default=False, help_text="If checked, a link to this page will be repeated alongside it's direct children when displaying a sub-navigation for this page.", verbose_name='repeat in sub-navigation')),
                ('repeated_item_text', models.CharField(blank=True, help_text="e.g. 'Section home' or 'Overview'. If left blank, the page title will be used.", max_length=255, verbose_name='repeated item link text')),
                ('overlay_color', wagtail_color_panel.fields.ColorField(default='#000000', max_length=7, verbose_name='Overlay Color')),
                ('overlay_opacity', models.CharField(choices=[('0', '0%'), ('.1', '10%'), ('.2', '20%'), ('.3', '30%'), ('.4', '40%'), ('.5', '50%'), ('.6', '60%'), ('.7', '70%'), ('.8', '80%'), ('.9', '90%'), ('1', '100%')], default='.7', max_length=4, verbose_name='Overlay Opacity')),
                ('content', wagtail.core.fields.StreamField([('cards', wagtail.core.blocks.StructBlock([('cards', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock([('icon', wagtail.core.blocks.ChoiceBlock(choices=[('fe-activity', 'Activity'), ('fe-airplay', 'AirPlay'), ('fe-alert-circle', 'Alert Circle'), ('fe-alert-octagon', 'Alert Octagon'), ('fe-alert-triangle', 'Alert Triangle'), ('fe-align-center', 'Align Center'), ('fe-align-justify', 'Align Justify'), ('fe-align-left', 'Align Left'), ('fe-align-right', 'Align Right'), ('fe-anchor', 'Anchor'), ('fe-aperture', 'Aperture'), ('fe-archive', 'Archive'), ('fe-arrow-down-circle', 'Arrow Down Circle'), ('fe-arrow-down-left', 'Arrow Down Left'), ('fe-arrow-down-right', 'Arrow Down Right'), ('fe-arrow-down', 'Arrow Down'), ('fe-arrow-left-circle', 'Arrow Left Circle'), ('fe-arrow-left', 'Arrow Left'), ('fe-arrow-right-circle', 'Arrow Right Circle'), ('fe-arrow-right', 'Arrow Right'), ('fe-arrow-up-circle', 'Arrow Up Circle'), ('fe-arrow-up-left', 'Arrow Up Left'), ('fe-arrow-up-right', 'Arrow Up Right'), ('fe-arrow-up', 'Arrow Up'), ('fe-at-sign', 'At Sign'), ('fe-award', 'Award'), ('fe-bar-chart-2', 'Bar Chart 2'), ('fe-bar-chart', 'Bar Chart'), ('fe-battery-charging', 'Battery Charging'), ('fe-battery', 'Battery'), ('fe-behance', 'Behance'), ('fe-bell-off', 'Bell Off'), ('fe-bell', 'Bell'), ('fe-bluetooth', 'Bluetooth'), ('fe-bold', 'Bold'), ('fe-book-open', 'Open Book'), ('fe-book', 'Book'), ('fe-bookmark', 'Bookmark'), ('fe-box', 'Box'), ('fe-briefcase', 'Briefcase'), ('fe-calendar', 'Calendar'), ('fe-camera-off', 'Camera Off'), ('fe-camera', 'Camera'), ('fe-cast', 'Cast'), ('fe-check-circle', 'Check Circle'), ('fe-check-square', 'Check Square'), ('fe-check', 'Check'), ('fe-chevron-down', 'Chevron Down'), ('fe-chevron-left', 'Chevron Left'), ('fe-chevron-right', 'Chevron Right'), ('fe-chevron-up', 'Chevron Up'), ('fe-chevron-down', 'Chevron Down'), ('fe-chevrons-left', 'Chevrons Left'), ('fe-chevrons-right', 'Chevrons Right'), ('fe-chevrons-up', 'Chevrons Up'), ('fe-chrome', 'Chrome'), ('fe-clipboard', 'Clipboard'), ('fe-clock', 'Clock'), ('fe-cloud-drizzle', 'Cloud Drizzle'), ('fe-cloud-lightning', 'Cloud Lightning'), ('fe-cloud-off', 'Cloud Off'), ('fe-cloud-rain', 'Cloud Rain'), ('fe-cloud-snow', 'Cloud Snow'), ('fe-cloud', 'Cloud'), ('fe-code', 'Code'), ('fe-codepen', 'Codepen'), ('fe-codesandbox', 'Code Sandbox'), ('fe-coffee', 'Coffee'), ('fe-columns', 'Columns'), ('fe-command', 'Command'), ('fe-compass', 'Compass'), ('fe-copy', 'Copy'), ('fe-corner-down-left', 'Corner Down Left'), ('fe-corner-down-right', 'Corner Down Right'), ('fe-corner-left-down', 'Corner Left Down'), ('fe-corner-left-up', 'Corner Left Up'), ('fe-corner-right-down', 'Corner Right Down'), ('fe-corner-right-up', 'Corner Right Up'), ('fe-corner-up-left', 'Corner Up Left'), ('fe-corner-up-right', 'Corner Up Right'), ('fe-cpu', 'CPU'), ('fe-credit-card', 'Credit Card'), ('fe-crop', 'Crop'), ('fe-crosshair', 'Crosshair'), ('fe-database', 'Database'), ('fe-delete', 'Delete'), ('fe-disc', 'Disc'), ('fe-dollar-sign', 'Dollar Sign'), ('fe-download-cloud', 'Download Cloud'), ('fe-download', 'Download'), ('fe-dribbble', 'Dribble'), ('fe-droplet', 'Droplet'), ('fe-edit-2', 'Edit 2'), ('fe-edit-3', 'Edit 3'), ('fe-edit', 'Edit'), ('fe-external-link', 'External Link'), ('fe-eye-off', 'Eye Off'), ('fe-eye', 'Eye'), ('fe-facebook', 'Facebook'), ('fe-fast-forward', 'Fast Forward'), ('fe-feather', 'Feather'), ('fe-figma', 'Figma'), ('fe-file-minus', 'File Minus'), ('fe-file-plus', 'File Plus'), ('fe-file-text', 'File Text'), ('fe-file', 'File'), ('fe-film', 'Film'), ('fe-filter-alt', 'Filter Alt'), ('fe-filter', 'Filter'), ('fe-flag', 'Flag'), ('fe-folder-minus', 'Folder Minus'), ('fe-folder-plus', 'Folder Plus'), ('fe-folder', 'Folder'), ('fe-framer', 'Framer'), ('fe-frown', 'Frown'), ('fe-gift', 'Gift'), ('fe-git-branch', 'Git Branch'), ('fe-git-commit', 'Git Commit'), ('fe-git-merge', 'Git Merge'), ('fe-git-pull-request', 'Git Pull Request'), ('fe-github', 'Github'), ('fe-gitlab', 'Gitlab'), ('fe-globe', 'Globe'), ('fe-google', 'Google'), ('fe-grid', 'Grid'), ('fe-hangouts', 'Hangouts'), ('fe-hard-drive', 'Hard Drive'), ('fe-hash', 'Hash'), ('fe-headphones', 'Headphones'), ('fe-heart', 'Heart'), ('fe-help-circle', 'Help Circle'), ('fe-hexagon', 'Hexagon'), ('fe-home', 'Home'), ('fe-image', 'Image'), ('fe-inbox', 'Inbox'), ('fe-info', 'Info'), ('fe-instagram', 'Instagram'), ('fe-italic', 'Italic'), ('fe-key', 'Key'), ('fe-layers', 'Layers'), ('fe-layout', 'Layout'), ('fe-life-buoy', 'Life Bouy'), ('fe-link-2', 'Link 2'), ('fe-link', 'Link'), ('fe-linkedin', 'Linkedin'), ('fe-list', 'List'), ('fe-loader', 'Loader'), ('fe-lock', 'Lock'), ('fe-log-in', 'Log In'), ('fe-log-out', 'Log Out'), ('fe-mail', 'Mail'), ('fe-map-pin', 'Map Pin'), ('fe-map', 'Map'), ('fe-maximize-2', 'Maximize 2'), ('fe-maximize', 'Maximize'), ('fe-meh', 'Meh'), ('fe-menu', 'Menu'), ('fe-message-circle', 'Message Circle'), ('fe-message-square', 'Message Square'), ('fe-messenger', 'Messenger'), ('fe-mic-off', 'Microphone Mute'), ('fe-mic', 'Microphone'), ('fe-minimize-2', 'Minimize 2'), ('fe-minimize', 'Minimize'), ('fe-minus-circle', 'Minus Circle'), ('fe-minus-square', 'Minus Square'), ('fe-minus', 'Minus'), ('fe-monitor', 'Monitor'), ('fe-moon', 'Moon'), ('fe-more-horizontal', 'More Horizontal'), ('fe-more-vertical', 'More Vertical'), ('fe-mouse-pointer', 'Mouse Pointer'), ('fe-move', 'Move'), ('fe-music', 'Music'), ('fe-navigation-2', 'Navigation 2'), ('fe-navigation', 'Navigation'), ('fe-octagon', 'Octagon'), ('fe-package', 'Package'), ('fe-paperclip', 'Paperclip'), ('fe-pause-circle', 'Pause Circle'), ('fe-pause', 'Pause'), ('fe-paypal', 'PayPal'), ('fe-pen-tool', 'Pen Tool'), ('fe-percent', 'Percent'), ('fe-phone-call', 'Phone Call'), ('fe-phone-forwarded', 'Phone Forwarded'), ('fe-phone-incoming', 'Phone Call Incoming'), ('fe-phone-missed', 'Phone Call Missed'), ('fe-phone-off', 'Phone Off'), ('fe-phone-outgoing', 'Phone Outgoing'), ('fe-phone', 'Phone'), ('fe-pie-chart', 'Pie Chart'), ('fe-pinterest', 'Pinterest'), ('fe-play-circle', 'Play Circle'), ('fe-play', 'Play'), ('fe-plus-circle', 'Plus Circle'), ('fe-plus-square', 'Plus Square'), ('fe-plus', 'Plus'), ('fe-pocket', 'Pocket'), ('fe-power', 'Power'), ('fe-printer', 'Printer'), ('fe-quotes', 'Quotes'), ('fe-radio', 'Radio'), ('fe-refresh-ccw', 'Refresh CCW'), ('fe-refresh-cw', 'Refresh CW'), ('fe-repeat', 'Repeat'), ('fe-rewind', 'Rewind'), ('fe-rotate-ccw', 'Rotate CCW'), ('fe-rotate-cw', 'Rotate CW'), ('fe-rss', 'RSS Feed'), ('fe-save', 'Save'), ('fe-scissors', 'Scissors'), ('fe-search', 'Search'), ('fe-send', 'Send'), ('fe-server', 'Server'), ('fe-settings', 'Settings'), ('fe-share-2', 'Share 2'), ('fe-share', 'Share'), ('fe-shield-off', 'Shield-Off'), ('fe-shield', 'Shield'), ('fe-shopping-bag', 'Shopping Bag'), ('fe-shopping-cart', 'Shopping Cart'), ('fe-shuffle', 'Shuffle'), ('fe-sidebar', 'Sidebar'), ('fe-skip-back', 'Skip Back'), ('fe-skip-forward', 'Skip Forward'), ('fe-skype', 'Skype'), ('fe-slack', 'Slack'), ('fe-slash', 'Slash'), ('fe-sliders', 'Sliders'), ('fe-smartphone', 'Smartphone'), ('fe-smile', 'Smile'), ('fe-speaker', 'Speaker'), ('fe-star', 'Star'), ('fe-stop-circle', 'Stop Circle'), ('fe-sun', 'Sun'), ('fe-sunrise', 'Sunrise'), ('fe-sunset', 'Sunset'), ('fe-tablet', 'Tablet'), ('fe-tag', 'Tag'), ('fe-target', 'Target'), ('fe-telegram', 'Telegram'), ('fe-terminal', 'Terminal'), ('fe-thermometer', 'Thermometer'), ('fe-thumbs-down', 'Thumbs Down'), ('fe-thumbs-up', 'Thumbs Up'), ('fe-toggle-left', 'Toggle Left'), ('fe-toggle-right', 'Toggle Right'), ('fe-tool', 'Tool'), ('fe-trash-2', 'Trash 2'), ('fe-trash', 'Trash'), ('fe-trello', 'Trello'), ('fe-trending-down', 'Trending Down'), ('fe-trending-up', 'Trending Up'), ('fe-truck', 'Truck'), ('fe-tumblr', 'Tumblr'), ('fe-tv', 'TV'), ('fe-twitch', 'Twitch'), ('fe-twitter', 'Twitter'), ('fe-type', 'Type'), ('fe-umbrella', 'Umbrella'), ('fe-underline', 'Underline'), ('fe-unlock', 'Unlock'), ('fe-upload-cloud', 'Upload Cloud'), ('fe-upload', 'Upload'), ('fe-user-check', 'User Check'), ('fe-user-minus', 'User Minus'), ('fe-user-plus', 'User Plus'), ('fe-user-x', 'User X'), ('fe-user', 'User'), ('fe-users', 'Users'), ('fe-viber', 'Viber'), ('fe-video-off', 'Video Off'), ('fe-video', 'Video'), ('fe-vimeo', 'Vimeo'), ('fe-vk', 'VK'), ('fe-voicemail', 'Voicemail'), ('fe-volume-1', 'Volume 1'), ('fe-volume-2', 'Volume 2'), ('fe-volume-x', 'Volume X'), ('fe-volume', 'Volume'), ('fe-watch', 'Watch'), ('fe-wechat', 'WeChat'), ('fe-wifi-off', 'WiFi Off'), ('fe-wifi', 'WiFi'), ('fe-wind', 'Wind'), ('fe-x-circle', 'X Circle'), ('fe-x-octagon', 'X Octagon'), ('fe-x-square', 'X Square'), ('fe-x', 'X'), ('fe-youtube', 'YouTube'), ('fe-zap-off', 'Zap Off'), ('fe-zap', 'Zap'), ('fe-zoom-in', 'Zoom In'), ('fe-zoom-out', 'Zoom Out')], help_text='Icon to display at the top of the card', required=False)), ('icon_color', wagtail_color_panel.blocks.NativeColorBlock(default='#180070')), ('title', wagtail.core.blocks.CharBlock(max_length=30, required=True)), ('subtitle', wagtail.core.blocks.CharBlock(help_text='Optional text to display beneath the title of the card', max_length=255, required=False)), ('button', wagtail.core.blocks.StructBlock([('button_color', wagtail.core.blocks.ChoiceBlock(choices=[('Primary', (('btn-primary', 'Primary Solid'), ('btn-translucent-primary', 'Primary Translucent'), ('btn-outline-primary', 'Primary Outline'))), ('Secondary', (('btn-secondary', 'Secondary Solid'), ('btn-translucent-secondary', 'Secondary Translucent'), ('btn-outline-secondary', 'Secondary Outline'))), ('Success', (('btn-success', 'Success Solid'), ('btn-translucent-success', 'Success Translucent'), ('btn-outline-success', 'Success Outline'))), ('Danger', (('btn-danger', 'Danger Solid'), ('btn-translucent-danger', 'Danger Translucent'), ('btn-outline-danger', 'Danger Outline'))), ('Warning', (('btn-warning', 'Warning Solid'), ('btn-translucent-warning', 'Warning Translucent'), ('btn-outline-warning', 'Warning Outline'))), ('Info', (('btn-info', 'Info Solid'), ('btn-translucent-info', 'Info Translucent'), ('btn-outline-danger', 'Info Outline'))), ('Light', (('btn-light', 'Light Solid'), ('btn-translucent-light', 'Light Translucent'), ('btn-outline-light', 'Light Outline'))), ('Dark', (('btn-dark', 'Dark Solid'), ('btn-translucent-dark', 'Dark Translucent'), ('btn-outline-dark', 'Dark Outline')))])), ('button_text', wagtail.core.blocks.CharBlock(label='Button/Link Text', max_length=50)), ('internal_page', wagtail.core.blocks.PageChooserBlock(help_text='Point the link to an internal page.', label='Internal Page Link', required=False)), ('external_link', wagtail.core.blocks.URLBlock(help_text='Point the link to an external page.', label='External Page Link', required=False)), ('new_tab', wagtail.core.blocks.BooleanBlock(help_text='Check if you would like the link to open in a new tab when clicked.', label='Open Link In New Tab?', required=False))], required=True))], icon='fa-plus-square-o'), label='Card'))])), ('cta', wagtail.core.blocks.StructBlock([('heading', wagtail.core.blocks.CharBlock(default='Want To Get Relief Faster?', help_text='Heading text to display to the right of the CTA links.', max_length=100, required=True)), ('subtext', wagtail.core.blocks.CharBlock(default='Choose an option that works best for you.', help_text='Optional text to display below the heading.', max_length=500, required=False)), ('links', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock([('icon', wagtail.images.blocks.ImageChooserBlock(help_text='Icon to display inside of a circle to act as a link.', required=True)), ('link', wagtail.core.blocks.StructBlock([('link_text', wagtail.core.blocks.CharBlock(label='Button/Link Text', max_length=50)), ('internal_page', wagtail.core.blocks.PageChooserBlock(help_text='Point the link to an internal page.', label='Internal Page Link', required=False)), ('external_link', wagtail.core.blocks.URLBlock(help_text='Point the link to an external page.', label='External Page Link', required=False)), ('new_tab', wagtail.core.blocks.BooleanBlock(help_text='Check if you would like the link to open in a new tab when clicked.', label='Open Link In New Tab?', required=False))], required=True))], icon='fa-link'), label='CTA Link')), ('background_image', wagtail.images.blocks.ImageChooserBlock(required=False))]))])),
                ('search_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Search image')),
                ('title_image', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='wagtailimages.image', verbose_name='Image')),
            ],
            options={
                'verbose_name': 'Education Home Page',
            },
            bases=(wagtailmetadata.models.MetadataMixin, 'wagtailcore.page', models.Model),
        ),
    ]
