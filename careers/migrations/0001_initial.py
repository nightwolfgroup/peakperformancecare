# Generated by Django 3.1.3 on 2020-11-18 22:44

import careers.models
from django.db import migrations, models
import django.db.models.deletion
import wagtail.core.fields
import wagtail_color_panel.fields
import wagtailmetadata.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('wagtailcore', '0059_apply_collection_ordering'),
        ('wagtailimages', '0022_uploadedimage'),
    ]

    operations = [
        migrations.CreateModel(
            name='Application',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.CharField(help_text='Position applied for', max_length=100)),
                ('first_name', models.CharField(help_text='Applicant first name', max_length=50)),
                ('last_name', models.CharField(help_text='Applicant last name', max_length=50)),
                ('phone', models.CharField(help_text='Applicant phone number', max_length=12)),
                ('email', models.EmailField(help_text='Applicant email address', max_length=254)),
                ('applicant_address', models.CharField(max_length=150, verbose_name='Address')),
                ('applicant_city', models.CharField(max_length=150, verbose_name='City')),
                ('applicant_state', models.CharField(max_length=2, verbose_name='State')),
                ('applicant_zip', models.IntegerField(verbose_name='Zip code')),
                ('eligible', models.CharField(help_text='Are you able to provide proof you are eligible to work in the U.S.?', max_length=3, verbose_name='Eligibility to work in U.S.?')),
                ('transportation', models.CharField(help_text='Do you have reliable transportation to get you to and from work?', max_length=3, verbose_name='Reliable transportation?')),
                ('cannot_work', models.CharField(help_text='Is there any time that you cannot work?', max_length=3, verbose_name='Time applicant cannot work?')),
                ('ref_name', models.CharField(max_length=100, verbose_name='Reference Name')),
                ('ref_phone', models.CharField(max_length=12, verbose_name='Reference Phone Number')),
                ('ref_relation', models.CharField(max_length=200, verbose_name='Relationship to Reference')),
                ('ref_years', models.CharField(max_length=50, verbose_name='Years applicant has known reference')),
                ('education', models.CharField(max_length=50, verbose_name='Highest level of education')),
                ('start_date', models.DateField(verbose_name='Earliest start date')),
                ('resume', models.FileField(upload_to='career_applicants/resume', validators=[careers.models.validate_file_format])),
                ('cover_letter', models.FileField(blank=True, upload_to='career_applicants/resume', validators=[careers.models.validate_file_format])),
                ('captcha', models.TextField()),
            ],
            options={
                'verbose_name': 'Job Applicant',
                'verbose_name_plural': 'Job Applicants',
            },
        ),
        migrations.CreateModel(
            name='Careers',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('overlay_color', wagtail_color_panel.fields.ColorField(default='#000000', max_length=7, verbose_name='Overlay Color')),
                ('overlay_opacity', models.CharField(choices=[('0', '0%'), ('.1', '10%'), ('.2', '20%'), ('.3', '30%'), ('.4', '40%'), ('.5', '50%'), ('.6', '60%'), ('.7', '70%'), ('.8', '80%'), ('.9', '90%'), ('1', '100%')], default='.7', max_length=4, verbose_name='Overlay Opacity')),
                ('search_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Search image')),
                ('title_image', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='wagtailimages.image', verbose_name='Image')),
            ],
            options={
                'verbose_name': 'Careers Home Page',
            },
            bases=(wagtailmetadata.models.MetadataMixin, 'wagtailcore.page', models.Model),
        ),
        migrations.CreateModel(
            name='CareerPost',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('valid_until', models.DateTimeField(null=True)),
                ('status', models.CharField(choices=[('Accepting Applications', 'Accepting Applications'), ('Interviewing Applicants', 'Interviewing Applicants'), ('Position Filled', 'Position Filled')], max_length=255)),
                ('position_type', models.CharField(choices=[('Full-time', 'Full-time'), ('Part-time', 'Part-time'), ('Per-diem', 'Per-diem'), ('Temporary', 'Temporary')], max_length=255)),
                ('salary', models.IntegerField(blank=True, null=True, verbose_name='Compensation ($)')),
                ('salary_unit', models.CharField(blank=True, choices=[('Hourly', 'Hourly'), ('Daily', 'Daily'), ('Weekly', 'Weekly'), ('Monthly', 'Monthly'), ('Yearly', 'Yearly')], max_length=255, verbose_name='Compensation Unit')),
                ('content', wagtail.core.fields.RichTextField(null=True)),
                ('search_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Search image')),
            ],
            options={
                'verbose_name': 'Career/Job Post',
            },
            bases=(wagtailmetadata.models.MetadataMixin, 'wagtailcore.page', models.Model),
        ),
    ]
